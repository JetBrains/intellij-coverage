import org.gradle.internal.jvm.Jvm

plugins {
  id "com.jfrog.bintray" version "1.7.3"
}

private calcVersion() {
  hasProperty("teamcity") ? "1.0.${teamcity["build.number"]}" : ""
}

apply plugin: 'maven-publish'

def trove = rootProject.file('lib/trove.jar')
def asm = rootProject.file('lib/asm-all.jar')

ext.library_project_trove4j = files(trove)
ext.library_project_asm_all = files(asm)

ext.test_discovery_jar_name = 'intellij-test-discovery-agent'
ext.coverage_jar_name = 'intellij-coverage-agent'

allprojects {
  version calcVersion()

  repositories {
    mavenCentral()
  }

  apply plugin: 'java'
  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  configurations {
    testArtifacts.extendsFrom testRuntime
  }

  dependencies {
    runtime files(Jvm.current().toolsJar)
  }

  sourceSets {
    main.java.srcDirs 'src'
  }
}

dependencies {
  compile project(':util')
}

//noinspection GrUnresolvedAccess
task wrapper(type: Wrapper) {
  gradleVersion = '4.5'
}

ext.repackLibs = copySpec {
  from { zipTree(trove.path) } {
    include(troveClasses())
  }
  from { zipTree(asm.path) } {
    include '**/*.class'
  }
}

// @formatter:off
private static troveClasses() {
  return '**/*.class' // todo: use proguard
  [  'THash'
   , 'Equality'
   , 'THashSet'
   , 'TIntHash'
   , 'TLongHash'
   , 'PrimeFinder'
   , 'TIntHashSet'
   , 'TObjectHash'
   , 'HashFunctions'
   , 'TIntIntHashMap'
   , 'TPrimitiveHash'
   , 'TObjectFunction'
   , 'TIntObjectHashMap'
   , 'TObjectIntHashMap'
   , 'TLongObjectHashMap'
   , 'TIntHashingStrategy'
   , 'TIntObjectProcedure'
   , 'TObjectIntProcedure'
   , 'TLongObjectProcedure'
   , 'TLongHashingStrategy'
   , 'TObjectHashingStrategy'].collect { "org/jetbrains/coverage/**/${it}.class" }
}
// @formatter:on

clean.doFirst {
  delete "dist"
}

apply from: 'artifacts.gradle'