/*
 * Copyright 2000-2018 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: project(":benchmarks").file("jmh.gradle")

ext {
  baselineVersion = '1.0.424'
  benchmarkIterations = 25
  benchmarkWarmupIterations = 10
  benchmarkRegexp = 'com\\.intellij\\.rt\\.coverage\\.jmh\\.DiscoveryAgentBenchmark.*'
  benchmarkProfilers = ['org.openjdk.jmh.profile.GCProfiler', 'com.intellij.rt.coverage.jmh.TraceFileProfiler']
  secondaryMetrics = ['trace.file.size', '·gc.alloc.rate', '·gc.count', '·gc.time']
}

configurations {
  head
  baseline
}

dependencies {
  head project(':test-discovery')
  baseline "$group:$test_discovery_jar_name:$baselineVersion"
}

def findAgent(Configuration configuration) {
  return configuration.find { it.name.startsWith(test_discovery_jar_name) }.absolutePath
}

def agentParams(Configuration configuration) {
  return ["-javaagent:${findAgent(configuration)}", "-Dtest.discovery.data.listener=com.intellij.rt.coverage.data.SingleTrFileDiscoveryProtocolDataListener"]
}

task Baseline(type: JavaExec) {
  configureCompareWithNoAgent(it) { agentParams(configurations.baseline) }
}

task Head(type: JavaExec) {
  dependsOn configurations.head.buildDependencies
  configureCompareWithNoAgent(it) { agentParams(configurations.head) }
}
